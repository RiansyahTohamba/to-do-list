stages:
  - unit-test
  - deploy
  - functional-test

# UnitTest:
#   image: python:3.6
#   stage: unit-test
#   before_script:
#     - apt-get install -f
#     - apt-get update -qy
#     - apt-get install -y sudo postgresql postgresql-client libpq-dev libxss1 libappindicator1 libindicator7
#     - python --version
#     - apt-get install -y xvfb
#     - service postgresql start
#     - sudo -u $DB_DEFAULT_OWNER psql -c "CREATE USER $DB_USERNAME WITH PASSWORD '$DB_PASSWORD' CREATEDB"
#     - sudo -u $DB_DEFAULT_OWNER psql -c "CREATE DATABASE $DB_NAME OWNER $DB_USERNAME"
#     - pip install --upgrade pip
#     - pip install -r requirements.txt
#     - pip install --upgrade --ignore-installed urllib3
#     - coverage run --omit='manage.py' manage.py test lists/test
#     - coverage run --omit='manage.py' manage.py test accounts/test
#     - python manage.py makemigrations
#     - python manage.py migrate
#     - python manage.py collectstatic --no-input
#     - python manage.py runserver 8000 &
#   when: on_success
#   script:
#     - python manage.py test lists/test
#     - python manage.py test accounts/test
#     - coverage report -m

Deploy:
  image: ruby:2.4
  stage: deploy
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_NAME --api-key=$HEROKU_API_KEY
    - export HEROKU_API_KEY=$HEROKU_API_KEY
    - heroku run --app $HEROKU_NAME migrate
  environment:
    name: production
    url: $HEROKU_HOST

# FunctionalTest:
#   image: python:3.6
#   stage: functional-test
#   before_script:
#     - apt-get install -f
#     - apt-get update -qy
#     - apt-get install -y sudo postgresql postgresql-client libpq-dev libxss1 libappindicator1 libindicator7
#     - python --version
#     - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
#     - echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google.list
#     - apt-get update -qq && apt-get install -y -qq unzip
#     - apt-get install -y google-chrome-stable
#     - export CHROME_BIN=/usr/bin/google-chrome
#     - google-chrome --version
#     - apt-get install -y xvfb
#     - wget https://chromedriver.storage.googleapis.com/79.0.3945.36/chromedriver_linux64.zip
#     - unzip chromedriver_linux64.zip
#     - service postgresql start
#     - sudo -u $DB_DEFAULT_OWNER psql -c "CREATE USER $DB_USERNAME WITH PASSWORD '$DB_PASSWORD' CREATEDB"
#     - sudo -u $DB_DEFAULT_OWNER psql -c "CREATE DATABASE $DB_NAME OWNER $DB_USERNAME"
#     - pip install --upgrade pip
#     - pip install -r requirements.txt
#     - pip install --upgrade --ignore-installed urllib3
#     - python manage.py makemigrations
#     - python manage.py migrate
#     - python manage.py collectstatic --no-input
#     - python manage.py runserver 8000 &
#   when: on_success
#   script:
#     - python manage.py test functional_tests
